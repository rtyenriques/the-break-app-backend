 Category
has_many :articles
:name - string

Article
belongs_to :category
:category_id - integer
:title - string,
:body, - string
:subtitle, -string
:author - string
:publish_date, -datetime
:image, - string

create models
not using views for api so use resources
rails g resource "model" attritbue:datatype 
--no-test-framework

create relationships with models
add validations
validates_inclusion_of :user, :in => ['user', 'client']

rails db:migrate
rails db:seed

work on controllers
best practice to create
mkdir api mkdir v1
use namespacing
fetch(http:..localhost:3000/api/v1/categories)

routes
namespace routes.rb to match directories 
add inheritance in controllers using Api::V1::controller

add gem 'rack-cors' 
cross-origin-response
allows to make requests
need to uncomment in Gemfile and in config/intializers/cors.rb
put '*' in example in origins or can specify localhost

deleting db
rails db:drop, then recreate db and migrate 
or
model.destroy_all but wont clear db

rails s -p 3000 to change port

work on instance methods for logic in models 

work on controllers
create crud methods and strong params

work on serializer to send over specific info

frontend
-check if api is working by using fetch get requests
componentDidMount(){
    fetch('http://localhost:3000/api/v1/categories', {
      method: 'GET'
    })
    .then(response => response.json())
    .then(data => console.log(data ))
  }

  need to set up serializer so we can chain along response data
  ex. console.log(data[0].articles)
  add to gemfile gem 'active_model_serializers'
  rails g serializer model #do each seperately
  it creates serialzer directory and we can add attributes we want to access
  then add in relationships 